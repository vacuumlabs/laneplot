(function($,window,undefined){if(typeof Object.create!=="function")Object.create=function(o){function F(){}F.prototype=o;return new F};var Graphics=function(){var self=this;this.svg={elem:null,wrapper:null,width:0,height:0,minValue:0,maxValue:0,scale:null,rectMargin:5,timelinesCount:1,xAxisHeight:30,eventOverflow:0,gradients:[],position:0,padding:0,itemYoffset:0,intervalRadius:10,intervalArrow:false};this.timelines=[];this.viewport={width:0,milliseconds:0};this.labels={elem:null,width:0,height:0,
    laneHeight:"30px"};this.errorCallback=null;this.init=function(svgElem,wrapperElem,labelsElem,laneCount,labelsWidth,laneHeight,milliseconds,timelines,errorCallback){if(parseInt(laneHeight)<=0)this.errorMsg("ERR_BAD_HEIGHT",laneHeight);self.svg.elem=svgElem;self.svg.wrapper=wrapperElem;self.labels.elem=labelsElem;self.labels.laneCount=laneCount;self.labels.width=labelsWidth;self.labels.laneHeight=laneHeight;self.viewport.milliseconds=parseInt(milliseconds);self.svg.xAxisHeight=parseInt(self.labels.laneHeight);
    if(!(timelines instanceof Array)||timelines.length==0)self.timelines.push({resolution:Math.ceil(self.viewport.milliseconds),dateFormat:"MM-DD"});else self.timelines=timelines;self.svg.itemYoffset=self.timelines.length*self.svg.xAxisHeight;self.errorCallback=errorCallback};this.update=function(minValue,maxValue){self.labels.elem.css("width",self.labels.width);self.svg.wrapper.css("margin-left",self.labels.width);if(minValue&&maxValue){self.svg.minValue=minValue;self.svg.maxValue=maxValue;self.viewport.width=
    self.svg.wrapper.width();self.svg.scale=d3.scale.linear().domain([0,self.viewport.milliseconds]).range([0,self.viewport.width]);self.svg.width=self.svg.scale(Math.abs(maxValue-minValue));self.svg.elem.attr("width",self.svg.width+self.svg.eventOverflow+self.svg.padding)}var timelinesHeight=self.svg.xAxisHeight*self.timelines.length;self.svg.height=self.labels.laneCount*parseInt(self.labels.laneHeight)+timelinesHeight;self.svg.elem.attr("height",self.svg.height)};this.generateGradient=function(color){var gradientId=
    "";self.svg.gradients.forEach(function(gradient){if(gradient.color0==color[0]&&gradient.color1==color[1])gradientId=gradient.id});if(gradientId!="")return gradientId;gradientId="gradient"+self.svg.gradients.length;var svg=self.svg.elem;var gradient=svg.append("svg:defs").append("svg:linearGradient").attr("id",gradientId).attr("x1","100%").attr("y1","100%").attr("x2","100%").attr("y2","0%");gradient.append("svg:stop").attr("offset","0").attr("stop-color",color[0]);gradient.append("svg:stop").attr("offset",
    "1").attr("stop-color",color[1]);self.svg.gradients.push({color0:color[0],color1:color[1],id:"#"+gradientId});return"#"+gradientId};this.progressPolygon=function rounded_rect(x,y,w,h,r,full){var retval="";if(full){retval+="M "+(x+r)+","+y;retval+=" h "+(w-2*r);retval+=" a "+r+","+r+" 0 0 1 "+r+","+r;retval+=" v "+(h-2*r);retval+=" a "+r+","+r+" 0 0 1 "+-r+","+r;retval+=" h "+(2*r-w);retval+=" a "+r+","+r+" 0 0 1 "+-r+","+-r;retval+=" v "+(2*r-h);retval+=" a "+r+","+r+" 0 0 1 "+r+","+-r;retval+=" z"}else{retval+=
    "M "+(x+r)+","+y;retval+=" h "+(w-2*r);retval+=" l "+r+","+h/2;retval+=" l "+-r+","+h/2;retval+=" h "+(2*r-w);retval+=" a "+r+","+r+" 0 0 1 "+-r+","+-r;retval+=" v "+(2*r-h);retval+=" a "+r+","+r+" 0 0 1 "+r+","+-r;retval+=" z"}return retval};this.attachTooltip=function(elem,tooltip,isGroupTooltip,nestedTooltips,eventsGroupClasses){var self=this;var defaultTooltip={position:{my:"top center",at:"bottom center",adjust:{mouse:false}},style:{},content:{text:""},events:{show:function(event,api){var itemTop=
    Math.floor($(elem).offset().top),itemBot=itemTop+parseInt(self.labels.laneHeight)-self.svg.rectMargin*2;api.options.position.target=[api.mouse.pageX,itemBot]},render:function(event,api){$.each(api.elements.content.find("tr"),function(i,elem){if(nestedTooltips[i]!="undefined")self.attachTooltip(elem,nestedTooltips[i])})}},show:{event:"click mouseenter"},hide:{event:"unfocus mouseleave"}};if(isGroupTooltip){defaultTooltip.hide.fixed=true;defaultTooltip.hide.delay=500;defaultTooltip.hide.leave=false;
    if(typeof eventsGroupClasses==="string"&&eventsGroupClasses!="")defaultTooltip.style.classes=" "+eventsGroupClasses}if(typeof tooltip==="string")defaultTooltip.content.text=tooltip;else if(typeof tooltip==="object"){if(typeof tooltip.content==="string")defaultTooltip.content.text=tooltip.content;if(typeof tooltip.classes==="string")defaultTooltip.style.classes=" "+tooltip.classes}else return false;if(typeof jQuery.fn.qtip==="undefined")self.errorMsg("ERR_NO_PLUGIN",{name:"qtip"});$(elem).qtip(defaultTooltip)};
    this.errorMsg=function(code,targetObject){if(typeof this.errorCallback!=="function")return false;var errorMsg={};[{code:"ERR_NO_DATA",message:"V konfigur\u00e1cii ch\u00fdba objekt data"},{code:"ERR_DATE_FMT",message:"Nepodarilo sa spracovat datum"},{code:"ERR_BAD_EVENT_TYPE",message:"Lane item nezodpoveda specifikacii ziadneho typu eventu alebo intervalu"},{code:"ERR_BAD_RANGE",message:"Nespravny rozsah datumov"},{code:"ERR_BAD_HEIGHT",message:"Hodnota laneHeight musi byt vacsia ako 0"},{code:"ERR_NO_PLUGIN",
        message:"Nepodarilo sa nacitat potrebne pluginy"},{code:"ERR_INTERVAL_COLLISION",message:"Intervaly v rovnakom riadku sa nemozu prekryvat"}].forEach(function(error){if(error.code==code){errorMsg=jQuery.extend({},error);return false}});this.errorCallback(code,jQuery.extend({},targetObject))}};var VacuumGanttObj={init:function(options,elem){var self=this;self.elem=$(elem);self.graphics=new Graphics;self.options=$.extend(true,{},$.fn.vacuumGantt.options,options);if(typeof moment==="undefined")if(typeof self.options.onError==
    "function")self.options.onError("ERR_NO_PLUGIN",{name:"momentjs"});if(typeof d3==="undefined")if(typeof self.options.onError=="function")self.options.onError("ERR_NO_PLUGIN",{name:"d3js"});if(!(self.options.data instanceof Array))self.graphics.errorMsg("ERR_NO_DATA",self.options.data);var leftCol=$("<div/>",{"class":"leftCol"}),svgWrapper=$("<div/>",{"class":"svgWrapper"}),rightCol=$("<div/>",{"class":"rightCol","html":svgWrapper});self.elem.addClass("vacuumGantt").append(rightCol).append(leftCol).append('<div class="clearfix"></div>');
    self.graphics.labels.elem=leftCol;if(typeof self.options.onLaneClick==="function")self.elem.bind("click touchstart",function(e){var parentOffset=$(this).offset(),relY=e.pageY-parentOffset.top-self.graphics.svg.itemYoffset,laneNumber=Math.floor(relY/parseInt(self.options.settings.laneHeight));if(laneNumber>=0&&laneNumber<=self.options.data.length-1)self.options.onLaneClick.call(this,self.options.data[laneNumber])});self.graphics.init(d3.select(svgWrapper[0]).append("svg:svg"),svgWrapper,leftCol,self.options.data.length,
        self.options.settings.labelsWidth,self.options.settings.laneHeight,self.options.settings.viewport.width,self.options.settings.grid.timelines,self.options.onError);var yAxisGroup=$("<div/>",{"class":"yaxis"});self.graphics.svg.wrapper.append(yAxisGroup);var axisSwitch=$("<div/>",{"class":"axisSwitch",style:"height:"+self.graphics.timelines.length*parseInt(self.graphics.labels.laneHeight)+"px"});self.graphics.labels.elem.append(axisSwitch);self.graphics.timelines.sort(function compare(a,b){if(a.resolution>
        b.resolution)return-1;if(a.resolution<b.resolution)return 1;return 0});var lvl=1;self.graphics.timelines.forEach(function(timeline){self.graphics.svg.elem.append("g").attr("class","xaxis time"+lvl);var aAxisLabels=$("<div/>",{"class":"xaxis time"+lvl,style:"height:"+self.graphics.svg.xAxisHeight+"px; position:relative; border-bottom: 1px solid "+self.options.settings.grid.color+";line-height:"+self.graphics.svg.xAxisHeight+"px;"});if(typeof timeline.classes==="string"&&timeline.classes!="")aAxisLabels.addClass(timeline.classes);
        yAxisGroup.append(aAxisLabels);yAxisGroup.append('<div class="clearfix"></div>');lvl++});self.graphics.svg.elem.append("g").attr("class","items");self.lanes=[];if(self.options.data instanceof Array){var index=0;self.options.data.forEach(function(laneData){var lane=Object.create(LaneObj);lane.init(self,laneData,index,self.graphics);lane.render();self.lanes.push(lane);index++})}var settings=self.options.settings;if(typeof settings.boundaries.startDate==="string"&&settings.boundaries.startDate!=""){settings.boundaries.startDate=
        new Date(settings.boundaries.startDate);if(!settings.boundaries.startDate instanceof Date)self.graphics.errorMsg("ERR_DATE_FMT",settings.boundaries.startDate)}if(typeof settings.boundaries.endDate==="string"&&settings.boundaries.endDate!=""){settings.boundaries.endDate=new Date(settings.boundaries.endDate);if(!settings.boundaries.endDate instanceof Date)self.graphics.errorMsg("ERR_DATE_FMT",settings.boundaries.endDate)}if(typeof settings.viewport.position==="string"&&settings.viewport.position!=""){settings.viewport.position=
        new Date(settings.viewport.position);if(!settings.viewport.position instanceof Date)self.graphics.errorMsg("ERR_DATE_FMT",settings.viewport.position)}if(!(settings.boundaries.startDate instanceof Date))settings.boundaries.startDate=self.minDate;if(!(settings.boundaries.endDate instanceof Date))settings.boundaries.endDate=self.maxDate;if(settings.boundaries.startDate>settings.boundaries.endDate)self.graphics.errorMsg("ERR_BAD_RANGE",settings.boundaries)},resize:function(){var self=this,settings=self.options.settings;
    self.graphics.update(settings.boundaries.startDate,settings.boundaries.endDate);self.lanes.forEach(function(lane){lane.resize()});if(settings.viewport.position>0)if(settings.viewport.position<settings.boundaries.startDate)self.graphics.svg.wrapper.scrollLeft(self.graphics.svg.scale(0));else{var pos=Math.abs(settings.boundaries.startDate-settings.viewport.position);self.graphics.svg.wrapper.scrollLeft(self.graphics.svg.scale(pos))}var xAxisTicks,xAxisGroup,xAxisDomain,xAxisScale,xAxis,lvl=1,xAxisLables,
        tickIndex;self.graphics.timelines.forEach(function(timeline){xAxisTicks=5;if(!isNaN(timeline.resolution)){xAxisTicks=Math.abs(settings.boundaries.startDate.getTime()-settings.boundaries.endDate.getTime());xAxisTicks=Math.floor(xAxisTicks/timeline.resolution)}xAxisGroup=self.graphics.svg.elem.select(".xaxis.time"+lvl);xAxisDomain=[settings.boundaries.startDate,settings.boundaries.endDate];xAxisLables=self.graphics.svg.wrapper.find(".xaxis.time"+lvl);xAxisScale=d3.time.scale().domain(xAxisDomain).range(xAxisDomain.map(d3.time.scale().domain(xAxisDomain).range([0,
        self.graphics.svg.width])));tickIndex=1;xAxis=d3.svg.axis().scale(xAxisScale).orient("bottom").tickSize(self.graphics.svg.height).ticks(xAxisTicks).tickFormat(function(d){if(self.axisRendered){var tickWidth=xAxisScale(settings.boundaries.endDate)/xAxisTicks;if(xAxisTicks==0)tickWidth=xAxisScale(settings.boundaries.endDate);var tickPos=xAxisScale(d);var style="width:"+tickWidth+"px; position:absolute; left:"+tickPos+"px;";xAxisLables.children("div:nth-child("+tickIndex+")").attr("style",style)}else{if(d-
        settings.boundaries.endDate==0)return"";if(d==settings.boundaries.endDate)return false;var tickWidth=xAxisScale(settings.boundaries.endDate)/xAxisTicks;if(xAxisTicks==0)tickWidth=xAxisScale(settings.boundaries.endDate);var tickPos=xAxisScale(d);var style="width:"+tickWidth+"px; position:absolute; left:"+tickPos+"px;";xAxisLables.append('<div style="'+style+'">'+moment(d).format(timeline.dateFormat)+"</div>")}tickIndex++;return""});if(xAxisTicks==0)xAxis.tickValues([settings.boundaries.startDate]);
        function adjustTextLabels(selection){var box=selection.select("text").node().getBBox();var relX=0;var relY=(self.graphics.svg.xAxisHeight+2-box.height)/2;selection.selectAll("text").attr("y",0).attr("x",0).style("text-anchor","start").attr("transform","translate("+relX+", "+relY+")")}xAxisGroup.selectAll().remove();xAxisGroup.attr("transform","translate(0, "+self.graphics.svg.xAxisHeight*(lvl-1)+")").call(xAxis).selectAll("g").call(adjustTextLabels);d3.select(xAxisGroup.selectAll("g")[0].pop()).remove();
        xAxisGroup.select("path").remove();lvl++});self.axisRendered=true;if(typeof settings.grid.color==="string"&&typeof settings.grid.color!=""){self.graphics.svg.wrapper.children(".yaxis").children(".evenLane, .oddLane").css("border-bottom","1px solid "+settings.grid.color);self.graphics.svg.elem.selectAll(".xaxis line").style("stroke",settings.grid.color);self.graphics.svg.elem.selectAll(".xaxis path").style("stroke",settings.grid.color)}}};var LaneObj={init:function(plot,data,index,graphics){var self=
    this;self.graphics=graphics;self.index=index;self.first=index==0?true:false;self.last=index==plot.options.data.length-1?true:false;self.eventsGroupClasses=plot.options.settings.eventsGroupClasses;self.data=$.extend({},$.fn.vacuumGantt.laneOptions,data);self.elem=$("<div/>",{"class":"lane-label","style":"line-height:"+self.graphics.labels.laneHeight+";"+"height:"+self.graphics.labels.laneHeight});if(self.index%2==0)self.elem.addClass("evenLane");else self.elem.addClass("oddLane");if(self.first)self.elem.addClass("firstLane");
    if(self.last)self.elem.addClass("lastLane");if(typeof self.data.icon==="string"&&self.data.icon!=""){var icon=$("<img/>",{"class":"lane-icon","style":"max-height:"+self.graphics.labels.laneHeight+";","src":self.data.icon,"alt":"lane-icon"});icon.load(function(){self.elem.css("padding-left",parseInt(self.elem.css("padding-left"))+icon.width()+2)});self.elem.append(icon)}self.elem.append(self.data.description);if(self.data.items instanceof Array){self.items=[];self.data.items.sort(function(a,b){var aDate,
        bDate=0;if(a.date)aDate=new Date(a.date);else aDate=new Date(a.startDate);if(b.date)bDate=new Date(b.date);else bDate=new Date(b.startDate);return aDate-bDate});self.data.items.forEach(function(itemData){var item=null;if(typeof itemData.date==="string"&&itemData.date!="")item=Object.create(EventObj);else if(typeof itemData.startDate==="string"&&(itemData.startDate!=""&&(typeof itemData.endDate==="string"&&itemData.endDate!="")))if(self.checkThreshold(itemData.startDate,itemData.endDate,plot.options.settings.intervalThreshold)){itemData.date=
        itemData.startDate;item=Object.create(EventObj)}else item=Object.create(IntervalObj);item.init(plot,self.index,itemData,self.graphics);item.render();self.items.push(item)});self.checkIntersections()}},render:function(){var self=this;self.graphics.labels.elem.append(self.elem);self.laneBG=$("<div/>",{"class":self.index%2==0?"evenLane":"oddLane"});if(self.first)self.laneBG.addClass("firstLane");if(self.last)self.laneBG.addClass("lastLane");self.graphics.svg.wrapper.children(".yaxis").append(self.laneBG)},
    resize:function(){var self=this;self.laneBG.css("width",self.graphics.svg.width).css("height",self.graphics.labels.laneHeight);for(var i=0;i<self.items.length;i++)self.items[i].resize();var groups=[];var widthThreshold=0;for(var i=0;i<self.items.length;i++){if(self.items[i].type=="interval"){widthThreshold=0;continue}if(widthThreshold==0){widthThreshold=self.items[i].getPosX()+self.items[i].getWidth();groups.push([self.items[i]])}else if(self.items[i].getPosX()<widthThreshold){groups[groups.length-
        1].push(self.items[i]);widthThreshold=(groups[groups.length-1].length-1)*5+self.items[i].getPosX()+self.items[i].getWidth()}else{widthThreshold=self.items[i].getPosX()+self.items[i].getWidth();groups.push([self.items[i]])}}self.graphics.svg.wrapper.find(".eventsGroup.lane"+self.index).remove();groups.forEach(function(items){if(items.length<2)return true;var groupPosX=items[0].getPosX(),groupOffset=4,groupWidth=(items.length-1)*groupOffset+items[items.length-1].getWidth(),nestedTooltips=[],groupTooltip=
        $("<table/>",{"class":"groupTooltip"});for(var i=0;i<items.length;i++){items[i].setAsGroupItem(groupPosX+i*groupOffset,i==items.length-1?true:false);groupTooltip.append(items[i].generateGroupTooltip());nestedTooltips.push(items[i].tooltipData())}var groupElem=$("<div/>",{"class":"eventsGroup lane"+self.index,style:"top:"+items[0].getPosY()+"px; left:"+groupPosX+"px; height:"+items[0].getHeight()+"px; width:"+groupWidth+"px;z-index:3; position:absolute;"});self.graphics.svg.wrapper.append(groupElem);
        var eventIcon=items[items.length-1].eventIcon();eventIcon.load(function(){groupElem.css("width",groupWidth+eventIcon.width()+5)});self.graphics.attachTooltip(groupElem,groupTooltip.html(),true,nestedTooltips,self.eventsGroupClasses)})},checkIntersections:function(){var self=this;for(var i=0;i<self.items.length;i++)for(var j=0;j<self.items.length;j++){if(self.items[i].type=="event"||self.items[j].type=="event")continue;if(i==j)continue;if(self.items[i].startDate>=self.items[j].startDate&&self.items[i].startDate<=
        self.items[j].endDate||self.items[i].endDate>=self.items[j].startDate&&self.items[i].endDate<=self.items[j].startDate)self.graphics.errorMsg("ERR_INTERVAL_COLLISION",{interval1:self.items[i].data,interval2:self.items[j].data})}},checkThreshold:function(date1,date2,threshold){var date1=new Date(date1),date2=new Date(date2),threshold=new Date(threshold);if(date2-date1>0&&date2-date1<threshold)return true;else return false}};var IntervalObj={type:"interval",init:function(plot,laneIndex,data,graphics){var self=
    this;self.graphics=graphics;self.laneIndex=laneIndex;self.boundaries=plot.options.settings.boundaries;self.data=$.extend({},$.fn.vacuumGantt.intervalOptions,data);if(typeof self.data.startDate=="undefined"||typeof self.data.endDate=="undefined")self.graphics.errorMsg("ERR_BAD_EVENT_TYPE",data);if(typeof self.data.startDate==="string"&&self.data.startDate!="")self.startDate=new Date(self.data.startDate);if(typeof self.data.endDate==="string"&&self.data.endDate!="")self.endDate=new Date(self.data.endDate);
    if(typeof self.data.progressDate==="string"&&self.data.progressDate!="")self.progressDate=new Date(self.data.progressDate);else if(self.endDate instanceof Date)self.progressDate=self.endDate;else self.progressDate=null;if(!(self.startDate instanceof Date))self.graphics.errorMsg("ERR_DATE_FMT",self.data.startDate);if(!(self.endDate instanceof Date))self.graphics.errorMsg("ERR_DATE_FMT",self.data.endDate);if(self.data.progressDate&&!(self.startDate instanceof Date))self.graphics.errorMsg("ERR_DATE_FMT",
        self.data.progressDate);self.minMaxDate(plot,self.startDate,self.endDate)},render:function(){var self=this;var itemsGroup=self.graphics.svg.elem.select("g.items");self.intervalGroup=itemsGroup.append("g").attr("class","interval");var classes=self.data.classes.join(" ");var unfinished=self.intervalGroup.append("svg:path").attr("class",classes+" unfinished");if(typeof self.data.unfinishedColor==="string"&&self.data.unfinishedColor!="")unfinished.attr("style","fill:"+self.data.unfinishedColor);else if(self.data.unfinishedColor instanceof
    Array)unfinished.attr("style","fill:url("+self.graphics.generateGradient(self.data.unfinishedColor)+")");else unfinished.attr("style","fill:#D4D4D4");var progress=self.intervalGroup.append("svg:path").attr("class",classes+" progress");if(typeof self.data.progressColor==="string"&&self.data.progressColor!="")progress.attr("style","fill:"+self.data.progressColor);else if(self.data.progressColor instanceof Array)progress.attr("style","fill:url("+self.graphics.generateGradient(self.data.progressColor)+
    ")");self.intervalText=$("<div/>",{"class":"intervalText "+classes,"html":self.data.label});if(typeof self.data.icon==="string"&&self.data.icon!=""){var intervalIcon=$("<img />",{src:self.data.icon,"class":"intervalIcon"});self.intervalText.prepend(intervalIcon)}self.graphics.attachTooltip(self.intervalText,self.data.tooltip);self.graphics.svg.wrapper.append(self.intervalText)},minMaxDate:function(plot,startDate,endDate){if(plot.minDate==null||plot.minDate>startDate)plot.minDate=startDate;if(plot.maxDate==
    null||plot.maxDate<endDate)plot.maxDate=endDate},resize:function(){var self=this;if(self.startDate<self.boundaries.startDate)self.startDate=self.boundaries.startDate;var rectX=Math.abs(self.startDate-self.boundaries.startDate),rectY=parseInt(self.graphics.labels.laneHeight)*self.laneIndex+self.graphics.svg.rectMargin+self.graphics.svg.itemYoffset,progressWidth=Math.abs(self.progressDate-self.startDate),unfinishedWidth=Math.abs(self.endDate-self.startDate),rectHeight=parseInt(self.graphics.labels.laneHeight)-
    2*self.graphics.svg.rectMargin,progressRect=self.intervalGroup.select("path.progress"),unfinishedRect=self.intervalGroup.select("path.unfinished"),cornerRadius=self.graphics.svg.intervalRadius,fullProgress=!self.graphics.svg.intervalArrow;if(self.startDate>self.endDate||(self.progressDate>self.endDate||self.progressDate<self.startDate))self.graphics.errorMsg("ERR_BAD_RANGE",self.data);rectX=self.graphics.svg.scale(rectX);progressWidth=self.graphics.svg.scale(progressWidth);unfinishedWidth=self.graphics.svg.scale(unfinishedWidth);
    if(self.data.cornerRadius)cornerRadius=self.data.cornerRadius;unfinishedRect.attr("d",self.graphics.progressPolygon(rectX,rectY,unfinishedWidth,rectHeight,cornerRadius,true));if(self.data.arrow)fullProgress=!self.data.arrow;if(Math.abs(self.progressDate-self.endDate)==0)fullProgress=true;progressRect.attr("d",self.graphics.progressPolygon(rectX,rectY,progressWidth,rectHeight,cornerRadius,fullProgress));self.intervalText.css("left",(rectX+2*self.graphics.svg.rectMargin).toFixed(2)+"px").css("top",
        rectY.toFixed(2)+"px").css("width",(unfinishedWidth-2*self.graphics.svg.rectMargin).toFixed(2)).css("height",rectHeight.toFixed(2)).css("line-height",rectHeight.toFixed(2)+"px");var icon=self.intervalText.find(".intervalIcon").css("max-height",rectHeight.toFixed(2)-5);icon.load(function(){self.intervalText.css("padding-left",icon.width()+5)});self.intervalText.bind("mouseover touchStart",function(){$(this).siblings(".toFront").removeClass("toFront");$(this).addClass("toFront")});self.intervalText.bind("mouseout",
        function(){$(this).removeClass("toFront")})},getPosX:function(){return parseInt(this.intervalText.css("left"))}};var EventObj={type:"event",init:function(plot,laneIndex,data,graphics){var self=this;self.graphics=graphics;self.laneIndex=laneIndex;self.data=$.extend({},$.fn.vacuumGantt.eventOptions,data);if(typeof self.data.date=="undefined")self.graphics.errorMsg("ERR_BAD_EVENT_TYPE",data);if(typeof data.date==="string"&&data.date!="")self.date=new Date(data.date);if(!(self.date instanceof Date))self.graphics.errorMsg("ERR_DATE_FMT",
    self.data.date);self.minMaxDate(plot,self.date)},render:function(){var self=this;var classes=self.data.classes.join(" ");self.eventText=$("<div/>",{"class":"eventText "+classes,"html":self.data.label});if(typeof self.data.icon==="string"&&self.data.icon!=""){var eventIcon=$("<img />",{src:self.data.icon,"class":"eventIcon"});self.eventText.prepend(eventIcon)}self.graphics.attachTooltip(self.eventText,self.data.tooltip);self.graphics.svg.wrapper.append(self.eventText)},minMaxDate:function(plot,date){if(plot.minDate==
    null||plot.minDate>date)plot.minDate=date;if(plot.maxDate==null||plot.maxDate<date)plot.maxDate=date},resize:function(){var self=this;var textX=Math.abs(self.date-self.graphics.svg.minValue),textY=parseInt(self.graphics.labels.laneHeight)*self.laneIndex+self.graphics.svg.rectMargin-1+self.graphics.svg.itemYoffset,textHeight=parseInt(self.graphics.labels.laneHeight)-2*self.graphics.svg.rectMargin+1;textX=self.graphics.svg.scale(textX);self.eventText.css("left",parseInt(textX.toFixed(2))+4+"px").css("top",
    textY.toFixed(2)+"px").css("height",textHeight).css("line-height",textHeight+"px").css("width","");var icon=self.eventText.children(".eventIcon").css("max-height",textHeight);icon.load(function(){self.eventText.css("padding-left",icon.width()+5)});self.eventText.load(function(){if(textX.toFixed(2)+parseInt($(this).width)>self.graphics.svg.width){self.graphics.svg.eventOverflow=Math.abs(textX.toFixed(2)+parseInt($(this).width)-self.graphics.svg.width);self.graphics.svg.eventOverflow=0;self.graphics.svg.elem.attr("width",
    self.graphics.svg.width+self.graphics.svg.eventOverflow)}})},getWidth:function(){return this.eventText.width()+parseInt(this.graphics.labels.laneHeight)},getHeight:function(){return this.eventText.height()},getPosX:function(){return parseInt(this.eventText.css("left"))},getPosY:function(){return parseInt(this.eventText.css("top"))},getDate:function(){return this.data.date},eventIcon:function(){return this.eventText.children(".eventIcon")},tooltipData:function(){return this.data.tooltip},setAsGroupItem:function(posX,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        isLast){var self=this;if(!isLast)if(self.eventText.children("img").is("*")){self.eventText.css("width",self.eventText.children("img").width());self.eventText.css("overflow","hidden")}else self.eventText.css("width",0);self.eventText.css("left",posX+"px")},generateGroupTooltip:function(){var self=this,tooltip=$("<tr/>"),eventIcon="";if(typeof self.data.icon==="string"&&self.data.icon!="")eventIcon='<img class="eventIcon" src="'+self.data.icon+'"/>';tooltip.append("<td>"+moment(self.date).format("MM.DD.YYYY HH:mm")+
    "</td>"+"<td>"+eventIcon+"</td>"+"<td>"+self.data.label+"</td>");return tooltip}};$.fn.vacuumGantt=function(options){this.each(function(index,element){var vacuumGantt=Object.create(VacuumGanttObj);vacuumGantt.init(options,element);vacuumGantt.resize();$(window).resize(function(){vacuumGantt.resize()})})};$.fn.vacuumGantt.options={settings:{boundaries:{startDate:null,endDate:null},viewport:{width:2629743830,position:0},intervalThreshold:0,labelsWidth:"130px",laneHeight:"30px",grid:{color:"#000",timelines:[]}},
    onLaneClick:null};$.fn.vacuumGantt.laneOptions={id:null,description:"",icon:"",classes:"",items:[]};$.fn.vacuumGantt.intervalOptions={icon:"",classes:[],label:""};$.fn.vacuumGantt.eventOptions={icon:"",classes:[],label:""}})(jQuery,window);
